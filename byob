#!/bin/sh

FAIL_COLOR='\033[31m'
MESSAGE_COLOR='\033[34;1m'  # bold blue
NUMBER_COLOR='\033[32m'
WHITE='\033[0m'
DEFAULT_OFFSET=1  # portion of the file to show

parse_line () {
  echo "$1" | sed 's/^.*"\([^"]*\)".*line \([0-9][0-9]*\).*characters \([0-9][0-9]*\)-\([0-9][0-9]*\).*$/\1 \2 \3 \4/'
}

ocaml_lib_dirs=". $(ocamlc -where)"

search_in_path () {
  for dir in $ocaml_lib_dirs; do
    if [ -e "$dir/$1" ]; then
      echo "$dir/$1"
      break
    fi
  done

  echo ""
}

# line -> start_hl -> end_hl -> line
highlight_slice () {
  hl_line="$1"
  start_hl="$2"
  end_hl="$3"

  if [ 0 != "$start_hl" ]; then
    printf '%s' "$(echo "$hl_line" | cut -c"1-$((start_hl - 1))")"
  fi
  printf '%b%s%b' "$FAIL_COLOR" "$(echo "$hl_line" | cut -c"$start_hl-$end_hl")" "$WHITE"
  if [ "$end_hl" != "$((${#hl_line}))" ]; then
    printf '%s' "$(echo "$hl_line" | cut -c"$((end_hl + 1))-$((${#hl_line}))")"
  fi
  printf '\n'
}

# filename -> line number -> line
file_get_line () {
  tail -n+"$2" "$1" | head -n1
}

extract () {
  filename="$(search_in_path "$1")"
  line_number="$2"
  b="$3"
  e="$4"
  offset=$DEFAULT_OFFSET
  start=$((line_number - offset))
  end=$((line_number + offset))

  if [ "$filename" != "" ]; then
    for i in $(seq "$start" "$end"); do
      printf '%b%d%b:' "$NUMBER_COLOR" "$i" "$WHITE"
      line="$(file_get_line "$filename" "$i")"
      if [ "$i" = "$line_number" ]; then
        highlight_slice "$line" "$b" "$e"
      else
        echo "$line"
      fi
    done
  else
    echo "<file $1 not found>"
  fi
}

read -r line
while read -r line; do
  printf '%b%s%b\n' "$MESSAGE_COLOR" "$line" "$WHITE"
  info="$(parse_line "$line")"
  filename="$(echo "$info" | cut -d' ' -f1)"
  line="$(echo "$info" | cut -d' ' -f2)"
  b="$(echo "$info" | cut -d' ' -f3)"
  e="$(echo "$info" | cut -d' ' -f4)"
  extract "$filename" "$line" "$b" "$e"
  echo
done
